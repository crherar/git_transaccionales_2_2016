Contenidos:


Transaccion: Proceso mediante el cual se solicita una peticion y se responde en 1 sola instancia
Requerimientos: Entrego todo lo que necesito y responde con si o no con lo pedido.

----->> Propiedades de las transacciones <<----------------------

Domicidad: El proceso es todo en uno, pero en terminos del proceso completo no se puede descomponer
					 Funciona o no funciona

Consistente: El proceso que se realiza no deja el sistema inconsistente
						 La transaccion no debe dejar inconsistente el sistema

						 En una transferencia de $ entre dos cuentas, en una debe sumar y en la otra descontar

Independencia: Las transacciones son independientes
						   Transacciones simultaneas en forma secuencial
							 Si una transaccion falla, no implica que otra transaccion falle, al menos que sea por falla
							 	general del sistema
								Un error en un proceso no afecta a los demas


Las transacciones son perdurables en el tiempo => una accion hecha no desaparece con el tiempo

Atomicidad:Cada proceso debe ser completado satisfactoriamente.
  				 Es obligatorio que  se garantice que cada uno de los procesos de las transacciones sea completado
					 satisfactoriamente	.

A => Atomicidad
C => Consistencia
I => Independencia
D => Durabilidad

***************************************************************************************************************

Los sistemas transaccionales son independientes a la velocidad del usuario

En un sistema normal:
											Las solicitudes se responden a la velocidad del usuario (pensar en elegir
											cual pc comprar) y en el pc o dispositivo del usuario ==> durante ese tiempo
											hay recursos tomados del servidor

											(dibujo => cada pc cliente toma una porcion de recursos en el servidor(memoria por ej))


Sistema no transaccional: El usuario interactua directamente con el sistema y funciona a la velocidad del sistema

Sistema transaccional: El sistema funciona a la velocidad del Servidor principal y adelante hay una parte
											 interactiva


Asociado a cada transacción hay asociado un proceso transaccional que da a satisfacer esa transacción

Cada proceso con una transacción de forma independiente.

Si hay un nuevo proceso se agrega sin tener que bajar el sistema

Si hay una falla => se cae el proceso. En un sistema no transaccional, si hay un error => se cae todo

RPC ==> comunicar 2 procesos ejecutandose de manera independiente.

tx_sa => transaccion interna


En chile hay unos 7000-8000 cajeros automaticos y el sistema puede procesar 30 a 40 transacciones simultaneas
*******************************************************************************************************************
solemne 2012

a)
Los procesos no se comunican directamente entre si. Un proceso deja informacion en la tx_sa y el otro si quiere
la usa y si no quiere, no la usa

Los procesos no intercambian informacion.

La cola de mensajes se usa para comunicar los procesos con el demonio de base de datos

Cada proceso tiene su propio ambiente

Los procesos son independientes

El esquema de cola de mensajes no es para comunicar un proceso con otro,  sino que el monitor con el proceso
y el proceso con el demonio de la base de datos.

La transaccion interna permite dejar algo para que otro proceso eventualmente lo tome

b)
El monitor es el que provee el ambiente transaccional

Propiedades de las transacciones:
A atomico
C consistente
I independiente
D durable

c)
Proceso de cada una de las transacciones que se garantice que el proceso que cada una de
ellas sea completado ==> ESO ES ATOMICIDAD Y NO INDEPENDENCIA

 Es obligatorio que  se garantice que cada uno de los procesos de las transacciones sea completado
 satisfactoriamente ==> ESTO ES ATOMICIDAD
Un error en un proceso no afecta a los demas

d)
No es necesario estrictamente una base de datos, puede ser un txt o cualquier otra tecnología para
almacenar datos
No es primordial el uso de una base de datos

e)
Dado que las transacciones son independientes, no es mas dificil y ni mas facil agregar nueva funcionalidad,
sino que es agregable sin afectar a las demás.
Debido a que las transacciones son independientes yo puedo agregar nuevas funcionalidades sin afectar a las
que ya existen

PREGUNTA 2

Etapas de diseño de un sistema transaccional:
1 - Definir funcionalidades que vamos a ofrecer
2 - Definir las transacciones entrada y salida
3 - Definir los procesos

Tener un proceso que se encargue de comunicarse con las lineas aereas
Debiese ser un proceso distinto por cada linea aerea
Procesos independientes, demonios, para cada linea aerea



**********************************************

SOLEMNE RECUPERATIVA 2012

a)
Los procesos se activan cuando llega la transaccion....> hasta ahi ok
los procesos requieren manejar una cola ==> FALSO , el monitor maneja la cola
desde la cola se obtienen los datos a procesar ==> VERDADERO

b)
Los procesos no se comunican entre si
La transacciones pueden dejar algo para que sea usado por otro proceso ==> tx_sa

c)
Pueden acceder a la base de datos pero no se recomienda, porque como el proceso se activa cuando
llega la transaccion, cada vez se tiene que conectar y desconectar a la base de datos
es muy costoso en tiempo

El monitor no bloquea el acceso de la base de datos

Para el caso del monitor usado en clases, es necesario desarrollar un proceso externo ya que no
tiene esta funcionalidad. En los monitores transaccionales comerciales esta funcionalidad esta
incluida

d)
Una transaccion debe ==> el DEBE esta malo
lo correcto es que PUEDE CONTENER todos los datos



PREGUNTA 2


**********************************************

JUNIO 2014

a)
Hasta el primer punto seguido es 100% VERDADERO
el monitor decide cuando un proceso debe ejecutar => VERDADERO

decide cuando => AMBIGUO

El monitor no decide cuando un proceso termina ==> FALSO

EL monitor no tiene injerencia(no puede hacer nada para
que el proceso decida cuando el proceso termina) en proceso de cuando debe terminar


b)
El monitor para las transacciones concurrentes activa multiples procesos con la misma transaccion

La logica de negocio es programada en los procesos transaccionales ==> VERDADERO - de manera de posibilitar
la ejecucion concurrente de varias transacciones del mismo tipo ==> NO NECESARIAMENTE, es el monitor
quien hace la ejecucion concurrente de transacciones del mismo tipo en la medida que le lleguen transacciones
iguales y activa varias instancias del mismo proceso

La comunicacion  se logra mediante unas transacciones de salida internas que entrega cada proceso ==> VERDADERO

El contenido de TX_SA  es puesto a disposicion del  proceso que las requiera ==> FALSO ==> es el proceso que
viene a continuacion en la cadena de procesamiento que se ha difinido,el proceso
viene despues de mi siempre que se mantenga el contexto (los socket)

c)
El proceso no se preocupa de no dejar trasas, se ejecuta y termina, y todo lo que haya dejado a excepcion de la tx_sa
desaparece.
Despues del punto seguido hasta la coma es FALSO

Hasta el primer punto seguido ==> VERDADERO(Una de las caracteristicas que debe cumplir un sistema transaccional es la de garantizar
la independencia de las transacciones)

No afecta a la transaccion que viene a continuacion porque es un proceso nuevo que parte de cero ==> INDEPENDENCIA de las transacciones

d)
Las transacciones son el medio de transporte de los requerimientos de los usuarios hacia el sistema transaccional ==> VERDADERO pero
puede ser FALSO dependiendo de la interpretacion ==> EL MEDIO DE TRANSPORTE ES EL PROTOCOLO TCP Y FIBRA OPTICA - LOS ELECTRONES
Las transacciones fluyen de un proceso a otro ==> FALSOOO
Las transacciones vienen del usuario se procesa y vuelve al usuario
Lo que va de un proceso a otro es la tx_sa

e)
Los procesos se preocupan de la concurrencia ==> FALSO
EL monitor se precocupa de la concurrencia
No hay limite de transacciones que se pueden antender de forma simultanea, pero limitado por los recursos.
Si se agotan los recursos del sistema, se genera una cola para antender los procesos uno a uno

PREGUNTA 2

Argumentos para usar un monitor transaccional
a)
- Desarrollo escalable
- Demora porque el usuario no ingresa todo los datos
- si cae un proceso no cae todos <==> INDEPENDENCIA de los procesos
- Desarrollo puede ser incremental, agregar nuevas funcionalidades sin afectar a las demás
- uso de mas de un servidor para contener el sistema
b)
- puedo procesar una gran cantidad de transacciones sin usar recursos excesivos del computador
- usa mejor los recursos del computador
- simplifica la busqueda de errores
- pueden ser 1000 procesos pero cada uno de 50 lineas c/u

PROBLEMAS
- se puede interceptar la transacción y modificarla

c)
- aplicaciones en tiempo real(mineria, software de avion, monitoreo signos vitales) no puede implementarse en forma transaccional
